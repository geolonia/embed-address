!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o=(e,t,n,o)=>new Promise(a=>{t.forEach(t=>{const a=document.createElement("option");a.value=t[n],a.innerText=t[o],a.className="geolonia_address_"+e.name,e.appendChild(a)}),e.disabled=!1,a()}),a=(e,t,n)=>new Promise(o=>{t.forEach(t=>{const o=document.createElement("option");o.value=t[n],e.appendChild(o)}),o()}),r=e=>new Promise(t=>{[...e.children].forEach(e=>{const t=e;"-"!==t.innerHTML?t.remove():t.selected=!0}),t()}),l=(e,t)=>new Promise(n=>{e.className+=(e.className?" ":"")+"geolonia_address_wrap";e.innerHTML+=`\n    <button type="button" id="geolonia-reverse-geocode-button">${t.geolocationButtonLabel}</button>\n    <div class="geolonia_pref">\n      <label class="geolonia_pref_label" for="geolonia-pref-code">${t.prefectureLabel}</label>\n      <select class="geolonia_pref_select" id="geolonia-pref-code" disabled>\n        <option selected disabled>-</option>\n      </select>\n      <input type="hidden" id="geolonia-prefecture-name" name="${t.prefectureName}" />\n    </div>\n\n    <div class="geolonia_city">\n      <label class="geolonia_city_label" for="geolonia-city-code">${t.cityLabel}</label>\n      <select class="geolonia_city_select" id="geolonia-city-code" disabled>\n            <option selected disabled>-</option>\n      </select>\n      <input type="hidden" id="geolonia-city-name" name="${t.cityName}" />\n    </div>\n\n    <div class="geolonia_small_area">\n      <label class="geolonia_small_area_label" for="geolonia-small-area">${t.smallAreaLabel}</label>\n      <input class="geolonia_small_area_input" type="text" id="geolonia-small-area" list="geolonia-small-area-datalist" name="${t.smallAreaName}"></select>\n      <datalist id="geolonia-small-area-datalist"></datalist>\n      <input type="hidden" id=geolonia-small-area-is-exception name="is-exception" />\n    </div>\n\n    <div class="geolonia_other_address">\n      <label class="geolonia_other_address_label" for="geolonia-other-address">${t.otherAddressLabel}</label>\n      <input class="geolonia_ither_address_input" type="text" id="geolonia-other-address" name="${t.otherAddressName}"></select>\n    </div>\n\n    <div class="geolonia_error"><span id="geolonia-error-message" /></div>\n  `;const o=document.getElementById("geolonia-reverse-geocode-button"),a=document.querySelector("#geolonia-pref-code"),r=document.querySelector("#geolonia-prefecture-name"),l=document.querySelector("#geolonia-city-code"),i=document.querySelector("#geolonia-city-name"),s=document.querySelector("#geolonia-small-area"),c=document.querySelector("#geolonia-small-area-datalist"),d=document.querySelector("#geolonia-small-area-is-exception"),u=document.querySelector("#geolonia-other-address"),m=document.querySelector("#geolonia-error-message"),f=e.closest("form");a.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){m.innerText="";const t=e.target.value,n=[...document.querySelectorAll("#geolonia-pref-code option")].find(e=>e.value===t);n&&(r.value=n.innerText)}}),l.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){m.innerText="";const t=e.target.value,n=[...document.querySelectorAll("#geolonia-city-code option")].find(e=>e.value===t);n&&(i.value=n.innerText)}}),s.addEventListener("change",e=>{if(e.target instanceof HTMLInputElement){m.innerText="";const t=e.target.value,n=[...document.querySelectorAll("#geolonia-small-area-datalist option")].find(e=>e.value===t);d.value=n?"false":"true"}}),u.addEventListener("change",e=>{m.innerText=""}),n({buttonGeolocation:o,selectPrefCode:a,inputPrefName:r,selectCityCode:l,inputCityName:i,inputSmallArea:s,datalistSmallArea:c,inputIsSmallAreaException:d,spanErrorMessage:m,parentalForm:f})});var i=function(e,t,n,o){return new(n||(n=Promise))((function(a,r){function l(e){try{s(o.next(e))}catch(e){r(e)}}function i(e){try{s(o.throw(e))}catch(e){r(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,i)}s((o=o.apply(e,t||[])).next())}))};const s=e=>i(void 0,void 0,void 0,(function*(){try{return yield fetch("https://cdn.geolonia.com/address/"+e).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})),c={geolocationButtonLabel:"現在地から住所を入力",prefectureLabel:"都道府県",cityLabel:"市区町村",smallAreaLabel:"大字町丁目",otherAddressLabel:"その他の住所",prefectureName:"prefecture",cityName:"city",smallAreaName:"small-area",otherAddressName:"other-address"};var d=function(e,t,n,o){return new(n||(n=Promise))((function(a,r){function l(e){try{s(o.next(e))}catch(e){r(e)}}function i(e){try{s(o.throw(e))}catch(e){r(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,i)}s((o=o.apply(e,t||[])).next())}))};const u=e=>d(void 0,void 0,void 0,(function*(){let t;if(t=e instanceof HTMLElement?e:document.getElementById(e),!t)throw new Error("no target found.");const n=(e=>{const t=e.dataset||{};Object.keys(t).reduce((e,n)=>(e[n]=escape(t[n]),e),{});return Object.assign(Object.assign({},c),t)})(t);let u,m,f="",g="";const[{buttonGeolocation:p,selectPrefCode:v,inputPrefName:y,selectCityCode:b,inputCityName:h,inputSmallArea:_,datalistSmallArea:x,inputIsSmallAreaException:E,spanErrorMessage:S,parentalForm:w},L]=yield Promise.all([l(t,n),s("japan.json")]);L?(p.addEventListener("click",()=>d(void 0,void 0,void 0,(function*(){try{const e=yield new Promise((e,t)=>{window.navigator.geolocation.getCurrentPosition(t=>{const{latitude:n,longitude:o}=t.coords;e({lat:n,lng:o})},e=>t(e))});u=e.lat,m=e.lng}catch(e){return console.error(e),void(S.innerText="現在位置から住所を取得できませんでした。")}const e=yield((e,t)=>i(void 0,void 0,void 0,(function*(){try{return yield fetch(`https://api.geolonia.com/dev/reverseGeocode?lng=${e}&lat=${t}`).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})))(m,u);if(!e)return void(S.innerText="何かのエラーです。現在位置から住所を取得できませんでした。");S.innerText="";const{PREF:t,CITY:n,S_NAME:l}=e;f=t,g=t+n;const[c,d]=yield Promise.all([s(`japan/${f}.json`),s(`japan/${f}/${g}.json`)]);if(!(c&&d||L))return void(S.innerText="何かのエラーです。住所データを取得できませんでした。");const p=L.find(e=>e.都道府県コード===f),w=c.find(e=>e.市区町村コード===g);p&&(y.value=p.都道府県名),w&&(h.value=w.市区町村名),yield Promise.all([r(b),r(x)]),yield Promise.all([o(b,c,"市区町村コード","市区町村名"),a(x,d,"大字町丁目名")]),v.value=f,b.value=g,_.value=l||"",E.value=d.find(e=>e.大字町丁目名===l)?"false":"true"}))),yield o(v,L,"都道府県コード","都道府県名"),v.disabled=!1,v.addEventListener("change",e=>d(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){f=e.target.value;const t=yield s(`japan/${f}.json`);if(!t&&!L)return void(S.innerText="何かのエラーです。住所データを取得できませんでした。");yield Promise.all([r(b),r(x)]),yield o(b,t,"市区町村コード","市区町村名"),b.disabled=!1}}))),b.addEventListener("change",e=>d(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){g=e.target.value;const t=yield s(`japan/${f}/${g}.json`);if(!t&&!L)return void(S.innerText="何かのエラーです。住所データを取得できませんでした。");yield r(x),yield a(x,t,"大字町丁目名")}}))),w&&w.addEventListener("submit",e=>{if(e.target instanceof HTMLFormElement&&u&&m){const t=new FormData(e.target),o=new FormData;o.set(c.prefectureName,t.get(n.prefectureName)),o.set(c.cityName,t.get(n.cityName)),o.set(c.smallAreaName,t.get(n.smallAreaName)),o.set(c.otherAddressName,t.get(n.otherAddressName)),o.set("is-exception",t.get("is-exception")),o.set("lat",u.toString()),o.set("lng",m.toString()),fetch("path/to/geolonia/server",{method:"POST",body:o})}})):S.innerText="何かのエラーです。住所データを取得できませんでした。"})),m=document.getElementById("address");m&&u(m),window.geolonia||(window.geolonia={}),window.geolonia.address=u}]);