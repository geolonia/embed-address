!function(e){var n={};function t(o){if(n[o])return n[o].exports;var a=n[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(o,a,function(n){return e[n]}.bind(null,a));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const o=(e,n,t,o)=>new Promise(a=>{n.forEach(n=>{const a=document.createElement("option");a.value=n[t],a.innerText=n[o],a.className="geolonia_address_"+e.name,e.appendChild(a)}),e.disabled=!1,a()}),a=(e,n,t)=>new Promise(o=>{n.forEach(n=>{const o=document.createElement("option");o.value=n[t],e.appendChild(o)}),o()}),r=e=>new Promise(n=>{[...e.children].forEach(e=>{const n=e;"true"!==(n.dataset||{}).isPlaceholder?n.remove():n.selected=!0}),n()}),i=(e,n)=>{e.className+=(e.className?" ":"")+"geolonia_address_wrap";e.innerHTML+=`\n    <button\n      id="geolonia-reverse-geocode-button"\n      type="button"\n    >${n.geolocationButtonLabel}</button>\n\n    <select\n      id="geolonia-pref-code"\n      name="${n.prefCodeName}"\n      class="geolonia_pref_select"\n      disabled\n    >\n      <option\n        data-is-placeholder="true"\n        selected\n        disabled\n      >${n.prefectureLabel}</option>\n    </select>\n\n    <input\n      id="geolonia-prefecture-name"\n      name="${n.prefectureName}"\n      type="hidden"\n    />\n\n    <select\n      id="geolonia-city-code"\n      name="${n.cityCodeName}"\n      class="geolonia_city_select"\n      disabled\n    >\n      <option\n        data-is-placeholder="true"\n        selected\n        disabled\n      >${n.cityLabel}</option>\n    </select>\n\n    <input\n      id="geolonia-city-name"\n      name="${n.cityName}"\n      type="hidden"\n    />\n\n    <input\n      id="geolonia-small-area"\n      name="${n.smallAreaName}"\n      class="geolonia_small_area_input"\n      type="text"\n      list="geolonia-small-area-datalist"\n      placeholder="${n.smallAreaLabel}"\n    />\n\n    <datalist id="geolonia-small-area-datalist"></datalist>\n\n    <input\n      id=geolonia-small-area-is-exception\n      name="${n.isSmallAreaExceptionName}"\n      type="hidden"\n    />\n\n    <input\n      id="geolonia-other-address"\n      name="${n.otherAddressName}"\n      class="geolonia_ither_address_input"\n      type="text"\n      placeholder="${n.otherAddressLabel}"\n    />\n\n    <div class="geolonia_error">\n      <span id="geolonia-error-message" />\n    </div>\n  `;const t=document.getElementById("geolonia-reverse-geocode-button"),o=document.querySelector("#geolonia-pref-code"),a=document.querySelector("#geolonia-prefecture-name"),r=document.querySelector("#geolonia-city-code"),i=document.querySelector("#geolonia-city-name"),l=document.querySelector("#geolonia-small-area"),c=document.querySelector("#geolonia-small-area-datalist"),s=document.querySelector("#geolonia-small-area-is-exception"),d=document.querySelector("#geolonia-other-address"),u=document.querySelector("#geolonia-error-message"),m=e.closest("form");return o.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){u.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-pref-code option")].find(e=>e.value===n);t&&(a.value=t.innerText)}}),r.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){u.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-city-code option")].find(e=>e.value===n);t&&(i.value=t.innerText)}}),l.addEventListener("change",e=>{if(e.target instanceof HTMLInputElement){u.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-small-area-datalist option")].find(e=>e.value===n);s.value=t?"false":"true"}}),d.addEventListener("change",e=>{u.innerText=""}),{buttonGeolocation:t,selectPrefCode:o,inputPrefName:a,selectCityCode:r,inputCityName:i,inputSmallArea:l,datalistSmallArea:c,inputIsSmallAreaException:s,spanErrorMessage:u,parentalForm:m}},l={geolocationButtonLabel:"現在地から住所を入力",geolocatingLabel:"ロード中...",prefectureLabel:"都道府県",cityLabel:"市区町村",smallAreaLabel:"大字町丁目",otherAddressLabel:"その他の住所",prefectureName:"prefecture",prefCodeName:"pref-code",cityName:"city",cityCodeName:"city-code",smallAreaName:"small-area",isSmallAreaExceptionName:"is-exception",otherAddressName:"other-address"};var c=function(e,n,t,o){return new(t||(t=Promise))((function(a,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function l(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((o=o.apply(e,n||[])).next())}))};const s=e=>c(void 0,void 0,void 0,(function*(){try{return yield fetch("https://cdn.geolonia.com/address/"+e).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})),d=e=>s(`japan/${e}.json`),u=(e,n)=>s(`japan/${e}/${n}.json`);var m=function(e,n,t,o){return new(t||(t=Promise))((function(a,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function l(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((o=o.apply(e,n||[])).next())}))};const f=e=>m(void 0,void 0,void 0,(function*(){const n=(e=>{let n;if(n=e instanceof HTMLElement?e:document.getElementById(e),!n)throw new Error("no target found.");return n})(e),t=(e=>{const n=e.dataset||{},t=Object.keys(n).reduce((e,t)=>(e[t]=escape(n[t]),e),{});return Object.assign(Object.assign({},l),t)})(n);let f=NaN,g=NaN,p="",y="";const[v,h]=yield Promise.all([i(n,t),s("japan.json")]),{buttonGeolocation:b,selectPrefCode:N,inputPrefName:x,selectCityCode:E,inputCityName:S,inputSmallArea:L,datalistSmallArea:T,inputIsSmallAreaException:w,spanErrorMessage:A,parentalForm:P}=v;if(!h)return void(A.innerText="何かのエラーです。住所データを取得できませんでした。");yield o(N,h,"都道府県コード","都道府県名"),b.addEventListener("click",()=>m(void 0,void 0,void 0,(function*(){b.innerText=t.geolocatingLabel;try{const e=yield new Promise((e,n)=>{window.navigator.geolocation.getCurrentPosition(n=>{const{latitude:t,longitude:o}=n.coords;e({lat:t,lng:o})},e=>n(e))});f=e.lat,g=e.lng}catch(e){return console.error(e),b.innerText=t.geolocationButtonLabel,void(A.innerText="現在位置から住所を取得できませんでした。")}const e=yield((e,n)=>c(void 0,void 0,void 0,(function*(){try{return yield fetch(`https://api.geolonia.com/dev/reverseGeocode?lng=${e}&lat=${n}`).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})))(g,f);if(!e)return b.innerText=t.geolocationButtonLabel,void(A.innerText="何かのエラーです。現在位置から住所を取得できませんでした。");A.innerText="";const{PREF:n,CITY:i,S_NAME:l}=e;p=n,y=n+i;const[s,m]=yield Promise.all([d(p),u(p,y)]);if(!s||!m)return b.innerText=t.geolocationButtonLabel,void(A.innerText="何かのエラーです。住所データを取得できませんでした。");const v=h.find(e=>e.都道府県コード===p),P=s.find(e=>e.市区町村コード===y);v&&(x.value=v.都道府県名),P&&(S.value=P.市区町村名),yield Promise.all([r(E),r(T)]),yield Promise.all([o(E,s,"市区町村コード","市区町村名"),a(T,m,"大字町丁目名")]),N.value=p,E.value=y,L.value=l||"",w.value=m.find(e=>e.大字町丁目名===l)?"false":"true",b.innerText=t.geolocationButtonLabel})));N.addEventListener("change",e=>m(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){p=e.target.value;const n=yield d(p);if(!n)return void(A.innerText="何かのエラーです。住所データを取得できませんでした。");yield Promise.all([r(E),r(T)]),yield o(E,n,"市区町村コード","市区町村名")}}))),E.addEventListener("change",e=>m(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){y=e.target.value;const n=yield u(p,y);if(!n)return void(A.innerText="何かのエラーです。住所データを取得できませんでした。");yield r(T),yield a(T,n,"大字町丁目名")}}))),P&&P.addEventListener("submit",e=>{e.target instanceof HTMLFormElement&&!Number.isNaN(f)&&!Number.isNaN(g)&&(({formData:e,lat:n,lng:t},o)=>{const a=new FormData;a.set(l.prefCodeName,e.get(o.prefCodeName)),a.set(l.prefectureName,e.get(o.prefectureName)),a.set(l.cityName,e.get(o.cityName)),a.set(l.cityCodeName,e.get(o.cityCodeName)),a.set(l.smallAreaName,e.get(o.smallAreaName)),a.set(l.otherAddressName,e.get(o.otherAddressName)),a.set(l.isSmallAreaExceptionName,e.get(o.isSmallAreaExceptionName)),a.set("lat",n.toString()),a.set("lng",t.toString()),fetch("./",{method:"POST",body:a})})({formData:new FormData(e.target),lat:f,lng:g},t)})})),g=document.getElementById("address");g&&f(g),window.geolonia||(window.geolonia={}),window.geolonia.address=f}]);