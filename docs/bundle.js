!function(e){var n={};function t(o){if(n[o])return n[o].exports;var a=n[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(o,a,function(n){return e[n]}.bind(null,a));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const o=(e,n,t,o)=>new Promise(a=>{n.forEach(n=>{const a=document.createElement("option");a.value=n[t],a.innerText=n[o],a.className="geolonia_address_"+e.name,e.appendChild(a)}),e.disabled=!1,a()}),a=(e,n,t)=>new Promise(o=>{n.forEach(n=>{const o=document.createElement("option");o.value=n[t],e.appendChild(o)}),o()}),r=e=>new Promise(n=>{[...e.children].forEach(e=>{const n=e;"true"!==(n.dataset||{}).placeholder?n.remove():n.selected=!0}),n()}),i=(e,n)=>new Promise(t=>{e.className+=(e.className?" ":"")+"geolonia_address_wrap";e.innerHTML+=`\n    <button\n      id="geolonia-reverse-geocode-button"\n      type="button"\n    >${n.geolocationButtonLabel}</button>\n\n    <select\n      id="geolonia-pref-code"\n      name="${n.prefCodeName}"\n      class="geolonia_pref_select"\n      disabled\n    >\n      <option\n        data-placeholder="true"\n        selected\n        disabled\n      >${n.prefectureLabel}</option>\n    </select>\n\n    <input\n      id="geolonia-prefecture-name"\n      name="${n.prefectureName}"\n      type="hidden"\n    />\n\n    <select\n      id="geolonia-city-code"\n      name="${n.cityCodeName}"\n      class="geolonia_city_select"\n      disabled\n    >\n      <option\n        data-placeholder="true"\n        selected\n        disabled\n      >${n.cityLabel}</option>\n    </select>\n\n    <input\n      id="geolonia-city-name"\n      name="${n.cityName}"\n      type="hidden"\n    />\n\n    <input\n      id="geolonia-small-area"\n      name="${n.smallAreaName}"\n      class="geolonia_small_area_input"\n      type="text"\n      list="geolonia-small-area-datalist"\n      placeholder="${n.smallAreaLabel}"\n    />\n\n    <datalist id="geolonia-small-area-datalist"></datalist>\n\n    <input\n      id=geolonia-small-area-is-exception\n      name="${n.isSmallAreaExceptionName}"\n      type="hidden"\n    />\n\n    <input\n      id="geolonia-other-address"\n      name="${n.otherAddressName}"\n      class="geolonia_ither_address_input"\n      type="text"\n      placeholder="${n.otherAddressLabel}"\n    />\n\n    <div class="geolonia_error">\n      <span id="geolonia-error-message" />\n    </div>\n  `;const o=document.getElementById("geolonia-reverse-geocode-button"),a=document.querySelector("#geolonia-pref-code"),r=document.querySelector("#geolonia-prefecture-name"),i=document.querySelector("#geolonia-city-code"),l=document.querySelector("#geolonia-city-name"),c=document.querySelector("#geolonia-small-area"),d=document.querySelector("#geolonia-small-area-datalist"),s=document.querySelector("#geolonia-small-area-is-exception"),u=document.querySelector("#geolonia-other-address"),m=document.querySelector("#geolonia-error-message"),f=e.closest("form");a.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){m.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-pref-code option")].find(e=>e.value===n);t&&(r.value=t.innerText)}}),i.addEventListener("change",e=>{if(e.target instanceof HTMLSelectElement){m.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-city-code option")].find(e=>e.value===n);t&&(l.value=t.innerText)}}),c.addEventListener("change",e=>{if(e.target instanceof HTMLInputElement){m.innerText="";const n=e.target.value,t=[...document.querySelectorAll("#geolonia-small-area-datalist option")].find(e=>e.value===n);s.value=t?"false":"true"}}),u.addEventListener("change",e=>{m.innerText=""}),t({buttonGeolocation:o,selectPrefCode:a,inputPrefName:r,selectCityCode:i,inputCityName:l,inputSmallArea:c,datalistSmallArea:d,inputIsSmallAreaException:s,spanErrorMessage:m,parentalForm:f})}),l={geolocationButtonLabel:"現在地から住所を入力",prefectureLabel:"都道府県",cityLabel:"市区町村",smallAreaLabel:"大字町丁目",otherAddressLabel:"その他の住所",prefectureName:"prefecture",prefCodeName:"pref-code",cityName:"city",cityCodeName:"city-code",smallAreaName:"small-area",isSmallAreaExceptionName:"is-exception",otherAddressName:"other-address"};var c=function(e,n,t,o){return new(t||(t=Promise))((function(a,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function l(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((o=o.apply(e,n||[])).next())}))};const d=e=>c(void 0,void 0,void 0,(function*(){try{return yield fetch("https://cdn.geolonia.com/address/"+e).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})),s=e=>d(`japan/${e}.json`),u=(e,n)=>d(`japan/${e}/${n}.json`);var m=function(e,n,t,o){return new(t||(t=Promise))((function(a,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function l(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((o=o.apply(e,n||[])).next())}))};const f=e=>m(void 0,void 0,void 0,(function*(){const n=(e=>{let n;if(n=e instanceof HTMLElement?e:document.getElementById(e),!n)throw new Error("no target found.");return n})(e),t=(e=>{const n=e.dataset||{},t=Object.keys(n).reduce((e,t)=>(e[t]=escape(n[t]),e),{});return Object.assign(Object.assign({},l),t)})(n);let f,p,g="",y="";const[v,h]=yield Promise.all([i(n,t),d("japan.json")]),{buttonGeolocation:b,selectPrefCode:E,inputPrefName:N,selectCityCode:S,inputCityName:x,inputSmallArea:w,datalistSmallArea:A,inputIsSmallAreaException:L,spanErrorMessage:T,parentalForm:P}=v;h?(b.addEventListener("click",()=>m(void 0,void 0,void 0,(function*(){try{const e=yield new Promise((e,n)=>{window.navigator.geolocation.getCurrentPosition(n=>{const{latitude:t,longitude:o}=n.coords;e({lat:t,lng:o})},e=>n(e))});f=e.lat,p=e.lng}catch(e){return console.error(e),void(T.innerText="現在位置から住所を取得できませんでした。")}const e=yield((e,n)=>c(void 0,void 0,void 0,(function*(){try{return yield fetch(`https://api.geolonia.com/dev/reverseGeocode?lng=${e}&lat=${n}`).then(e=>{if(e.status>299)throw console.error(e),new Error("request error");return e.json()})}catch(e){return null}})))(p,f);if(!e)return void(T.innerText="何かのエラーです。現在位置から住所を取得できませんでした。");T.innerText="";const{PREF:n,CITY:t,S_NAME:i}=e;g=n,y=n+t;const[l,d]=yield Promise.all([s(g),u(g,y)]);if(!(l&&d||h))return void(T.innerText="何かのエラーです。住所データを取得できませんでした。");const m=h.find(e=>e.都道府県コード===g),v=l.find(e=>e.市区町村コード===y);m&&(N.value=m.都道府県名),v&&(x.value=v.市区町村名),yield Promise.all([r(S),r(A)]),yield Promise.all([o(S,l,"市区町村コード","市区町村名"),a(A,d,"大字町丁目名")]),E.value=g,S.value=y,w.value=i||"",L.value=d.find(e=>e.大字町丁目名===i)?"false":"true"}))),yield o(E,h,"都道府県コード","都道府県名"),E.disabled=!1,E.addEventListener("change",e=>m(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){g=e.target.value;const n=yield s(g);if(!n&&!h)return void(T.innerText="何かのエラーです。住所データを取得できませんでした。");yield Promise.all([r(S),r(A)]),yield o(S,n,"市区町村コード","市区町村名"),S.disabled=!1}}))),S.addEventListener("change",e=>m(void 0,void 0,void 0,(function*(){if(e.target instanceof HTMLSelectElement){y=e.target.value;const n=yield u(g,y);if(!n&&!h)return void(T.innerText="何かのエラーです。住所データを取得できませんでした。");yield r(A),yield a(A,n,"大字町丁目名")}}))),P&&P.addEventListener("submit",e=>{e.target instanceof HTMLFormElement&&f&&p&&(({formData:e,lat:n,lng:t},o)=>{const a=new FormData;a.set(l.prefCodeName,e.get(o.prefCodeName)),a.set(l.prefectureName,e.get(o.prefectureName)),a.set(l.cityName,e.get(o.cityName)),a.set(l.cityCodeName,e.get(o.cityCodeName)),a.set(l.smallAreaName,e.get(o.smallAreaName)),a.set(l.otherAddressName,e.get(o.otherAddressName)),a.set(l.isSmallAreaExceptionName,e.get(o.isSmallAreaExceptionName)),a.set("lat",n.toString()),a.set("lng",t.toString()),fetch("./",{method:"POST",body:a})})({formData:new FormData(e.target),lat:f,lng:p},t)})):T.innerText="何かのエラーです。住所データを取得できませんでした。"})),p=document.getElementById("address");p&&f(p),window.geolonia||(window.geolonia={}),window.geolonia.address=f}]);